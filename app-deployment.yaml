apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: erthone-showcase # name of deployment or service
spec:
  selector:
    matchLabels:
      app: erthone-showcase # to group multipple pods inside a single srvice. should be same in deployment and srvice files
  replicas: 3 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: erthone-showcase # app name shod be same with "matchLabels" name
    spec:
      containers:
        - name: earthone-showcase # name of contaner to be created
          image: earthone-showcase:0.1 # Image that will be used to create container in the cluster
          imagePullPolicy: IfNotPresent # will search image frol local if not present it will serch from docker hub
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          env:   # Setting Enviornmental Variables
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  host

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config
                  key :  dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : db-secrets
                  key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : db-secrets
                  key :  password

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: earthone-showcase-svc
spec:
  selector:
    app: erthone-showcase
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: NodePort # type of the service.